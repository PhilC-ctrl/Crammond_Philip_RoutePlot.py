import matplotlib.pyplot as plt

GRID_SIZE = 12 # Define the grid size as 12x12

def plot_route(file_name):
    try:
        # Read file content
        with open(file_name, 'r') as file:
            lines = file.readlines()
        
        # Get the starting point
        x = int(lines[0].strip())
        y = int(lines[1].strip())
        directions = [line.strip().upper() for line in lines[2:]]

        # Initialize list of route coordinates
        route = [(x, y)]
        
        # Process each direction
        for direction in directions:
            if direction == 'N':
                y += 1
            elif direction == 'S':
                y -= 1
            elif direction == 'E':
                x += 1
            elif direction == 'W':
                x -= 1
            else:
                print(f"Error: Invalid direction '{direction}' in file.")
                return

            # Check if the new position is within the grid
            if x < 0 or x >= GRID_SIZE or y < 0 or y >= GRID_SIZE:
                print("Error: The route is outside of the grid.")
                return

            # Add valid position to the route
            route.append((x, y))

        # Plot the route on the grid
        plot_grid(route)
        
        # Print the route coordinates
        print("Route Coordinates:")
        for coord in route:
            print(coord)

    except FileNotFoundError:
        print(f"Error: The file '{file_name}' was not found.")
    except ValueError:
        print("Error: The file contains invalid data. Ensure the start coordinates and directions are correct.")

def plot_grid(route):
    # Create a 12x12 grid and plot the route
    plt.figure(figsize=(6, 6))
    plt.xlim(-0.5, GRID_SIZE - 0.5)
    plt.ylim(-0.5, GRID_SIZE - 0.5)
    plt.grid(True)
    
    # Plot the route
    x_coords, y_coords = zip(*route)
    plt.plot(x_coords, y_coords, marker='o', markersize=5, color='b', label='Route')
    plt.scatter([x_coords[0]], [y_coords[0]], color='g', s=100, label='Start')
    plt.scatter([x_coords[-1]], [y_coords[-1]], color='r', s=100, label='End')
    
    plt.legend()
    plt.title("Drone Route Plot")
    plt.xlabel("X")
    plt.ylabel("Y")
    plt.gca().invert_yaxis() # Optional: Invert y-axis to match typical grid layout
    plt.show()

def main():
    while True:
        file_name = input("Enter the next route instructions file or enter STOP to finish: ")
        if file_name.upper() == "STOP":
            print("Exiting program.")
            break
        plot_route(file_name)

if __name__ == "__main__":
    main()
